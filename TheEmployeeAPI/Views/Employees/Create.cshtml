@model TheEmployeeAPI.CreateEmployeeRequest
@{
    ViewData["Title"] = "Ajouter un employé";
}

<!-- Page Header -->
<div class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div class="md:flex md:items-center md:justify-between">
            <div class="flex-1 min-w-0">
                <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                    Ajouter un employé
                </h2>
                <p class="mt-1 text-sm text-gray-500">
                    Remplissez les informations pour créer un nouveau profil employé
                </p>
            </div>
            <div class="mt-4 flex md:mt-0 md:ml-4">
                @await Html.PartialAsync("_Button", ("Retour à la liste", "button", "secondary", "md", "arrow-left", false, Url.Action("Index"), (string?)null))
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
    @await Html.PartialAsync("_AlertMessage")
    
    <form asp-action="Create" method="post" class="space-y-8">
        <div asp-validation-summary="ModelOnly" class="mb-6 p-4 bg-red-50 border border-red-200 rounded-md text-red-700"></div>
        
        <!-- Informations personnelles -->
        <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
            <div class="mb-6 pb-4 border-b border-gray-100">
                <h3 class="text-lg font-semibold text-gray-900">Informations personnelles</h3>
                <p class="mt-1 text-sm text-gray-600">Les informations de base de l'employé</p>
            </div>
            
            <div class="space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        @await Html.PartialAsync("_Input", ("FirstName", "Prénom", "text", "Entrez le prénom", true, Model?.FirstName, (string?)null))
                    </div>
                    <div>
                        @await Html.PartialAsync("_Input", ("LastName", "Nom", "text", "Entrez le nom", true, Model?.LastName, (string?)null))
                    </div>
                </div>
                
                <div>
                    @await Html.PartialAsync("_Input", ("SocialSecurityNumber", "Numéro de sécurité sociale", "text", "XXX-XX-XXXX", false, Model?.SocialSecurityNumber, "Format: XXX-XX-XXXX"))
                </div>
            </div>
        </div>

        <!-- Contact Info -->
        <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
            <div class="mb-6 pb-4 border-b border-gray-100">
                <h3 class="text-lg font-semibold text-gray-900">Informations de contact</h3>
                <p class="mt-1 text-sm text-gray-600">Comment contacter cet employé</p>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    @await Html.PartialAsync("_Input", ("Email", "Email", "email", "exemple@entreprise.com", false, Model?.Email, (string?)null))
                </div>
                <div>
                    @await Html.PartialAsync("_Input", ("PhoneNumber", "Téléphone", "tel", "+33 1 23 45 67 89", false, Model?.PhoneNumber, (string?)null))
                </div>
            </div>
        </div>

        <!-- Address -->
        <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
            <div class="mb-6 pb-4 border-b border-gray-100">
                <h3 class="text-lg font-semibold text-gray-900">Adresse</h3>
                <p class="mt-1 text-sm text-gray-600">Adresse de résidence de l'employé</p>
            </div>
            
            <div class="space-y-6">
                <div>
                    @await Html.PartialAsync("_Input", ("Address1", "Adresse ligne 1", "text", "123 Rue Example", false, Model?.Address1, (string?)null))
                </div>
                <div>
                    @await Html.PartialAsync("_Input", ("Address2", "Adresse ligne 2", "text", "Appartement, suite, etc.", false, Model?.Address2, (string?)null))
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        @await Html.PartialAsync("_Input", ("City", "Ville", "text", "Paris", false, Model?.City, (string?)null))
                    </div>
                    <div>
                        @await Html.PartialAsync("_Input", ("State", "État/Province", "text", "Île-de-France", false, Model?.State, (string?)null))
                    </div>
                    <div>
                        @await Html.PartialAsync("_Input", ("ZipCode", "Code postal", "text", "75001", false, Model?.ZipCode, (string?)null))
                    </div>
                </div>
            </div>
        </div>

        <!-- Benefits -->
        <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
            <div class="mb-6 pb-4 border-b border-gray-100">
                <h3 class="text-lg font-semibold text-gray-900">Avantages sociaux</h3>
                <p class="mt-1 text-sm text-gray-600">Sélectionnez les avantages pour cet employé</p>
            </div>
            
            <div class="space-y-4">
                @if (ViewBag.Benefits != null)
                {
                    @foreach (var benefit in (List<Benefit>)ViewBag.Benefits)
                    {
                        <div class="flex items-start space-x-3">
                            <input type="checkbox" 
                                   name="SelectedBenefitsIds" 
                                   value="@benefit.Id" 
                                   id="benefit_@benefit.Id"
                                   class="mt-1 h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500" />
                            <label for="benefit_@benefit.Id" class="flex-1">
                                <div class="text-sm font-medium text-gray-900">@benefit.Name</div>
                                <div class="text-sm text-gray-600">@benefit.Description</div>
                                <div class="text-sm text-green-600 font-medium">Coût: @benefit.BaseCost.ToString("C")</div>
                            </label>
                        </div>
                    }
                }
                else
                {
                    <p class="text-gray-500 text-sm">Aucun avantage disponible</p>
                }
            </div>
        </div>

        <!-- Actions -->
        <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200">
            @await Html.PartialAsync("_Button", ("Annuler", "button", "secondary", "md", (string?)null, false, Url.Action("Index"), (string?)null))
            @await Html.PartialAsync("_Button", ("Créer l'employé", "submit", "primary", "md", "user-plus", false, (string?)null, (string?)null))
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 