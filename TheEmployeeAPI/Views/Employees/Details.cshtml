@model TheEmployeeAPI.Employee
@{
    ViewData["Title"] = "Détails de l'employé";
}

<!-- Page Header -->
<div class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div class="md:flex md:items-center md:justify-between">
            <div class="flex-1 min-w-0">
                <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                    @Model.FirstName @Model.LastName
                </h2>
                <p class="mt-1 text-sm text-gray-500">
                    Détails de l'employé
                </p>
            </div>
            <div class="mt-4 flex md:mt-0 md:ml-4 space-x-3">
                @await Html.PartialAsync("_Button", ("Retour à la liste", "button", "secondary", "md", "arrow-left", false, Url.Action("Index"), (string?)null))
                @await Html.PartialAsync("_Button", ("Modifier", "button", "primary", "md", "edit", false, Url.Action("Edit", new { id = Model.Id }), (string?)null))
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
    @await Html.PartialAsync("_AlertMessage")
    
    <div class="space-y-8">
        <!-- Employee Info -->
        <div class="bg-gray-50 border border-gray-200 rounded-xl p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Informations de l'employé</h3>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                <div>
                    <span class="text-sm font-medium text-gray-500">Prénom:</span>
                    <span class="ml-2 text-sm text-gray-900">@Model.FirstName</span>
                </div>
                <div>
                    <span class="text-sm font-medium text-gray-500">Nom:</span>
                    <span class="ml-2 text-sm text-gray-900">@Model.LastName</span>
                </div>
                @if (!string.IsNullOrEmpty(Model.SocialSecurityNumber))
                {
                    <div class="sm:col-span-2">
                        <span class="text-sm font-medium text-gray-500">NSS:</span>
                        <span class="ml-2 text-sm text-gray-900">@Model.SocialSecurityNumber</span>
                    </div>
                }
            </div>
        </div>

        <!-- Contact Info -->
        <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Informations de contact</h3>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <div>
                        <span class="text-sm font-medium text-gray-500">Email:</span>
                        <span class="ml-2 text-sm text-gray-900">@Model.Email</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                {
                    <div>
                        <span class="text-sm font-medium text-gray-500">Téléphone:</span>
                        <span class="ml-2 text-sm text-gray-900">@Model.PhoneNumber</span>
                    </div>
                }
            </div>
        </div>

        <!-- Address -->
        @if (!string.IsNullOrEmpty(Model.Address1) || !string.IsNullOrEmpty(Model.City))
        {
            <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Adresse</h3>
                <div class="text-sm text-gray-900">
                    @if (!string.IsNullOrEmpty(Model.Address1))
                    {
                        <div>@Model.Address1</div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Address2))
                    {
                        <div>@Model.Address2</div>
                    }
                    @if (!string.IsNullOrEmpty(Model.City) || !string.IsNullOrEmpty(Model.State) || !string.IsNullOrEmpty(Model.ZipCode))
                    {
                        <div>
                            @Model.City@(!string.IsNullOrEmpty(Model.State) ? $", {Model.State}" : "")@(!string.IsNullOrEmpty(Model.ZipCode) ? $" {Model.ZipCode}" : "")
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Benefits -->
        @if (Model.EmployeeBenefits != null && Model.EmployeeBenefits.Any())
        {
            <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Avantages sociaux</h3>
                <div class="space-y-3">
                    @foreach (var employeeBenefit in Model.EmployeeBenefits)
                    {
                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                            <div>
                                <div class="text-sm font-medium text-gray-900">@employeeBenefit.Benefit.Name</div>
                                <div class="text-sm text-gray-600">@employeeBenefit.Benefit.Description</div>
                            </div>
                            <div class="text-sm font-medium text-green-600">
                                @employeeBenefit.Benefit.BaseCost.ToString("C")
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>